import os
import sys
import django

sys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/..')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from clickhouse_client import ClickHouseClient


def test_native_protocol():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π TCP –ø—Ä–æ—Ç–æ–∫–æ–ª –Ω–∞ –ø–æ—Ä—Ç—É 9000"""
    print("=== Testing Native TCP Protocol (port 9000) ===")

    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
    os.environ['CLICKHOUSE_PORT'] = '9000'
    os.environ['CLICKHOUSE_SECURE'] = 'false'

    try:
        with ClickHouseClient() as client:
            # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            if client.test_connection():
                print("‚úÖ Native protocol connection successful")

                # –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
                result = client.execute_query('SELECT 1 as number, now() as current_time')
                if result.error:
                    print(f"‚ùå Query failed: {result.error}")
                else:
                    print(f"‚úÖ Query successful: {result.data}")

                # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ
                server_info = client.get_server_info()
                print(f"üìä Server version: {server_info['version']}")
                print(f"‚è±Ô∏è Server uptime: {server_info['uptime_seconds']} seconds")

            else:
                print("‚ùå Native protocol connection failed")

    except Exception as e:
        print(f"üí• Unexpected error: {e}")


if __name__ == '__main__':
    test_native_protocol()